name: build

on: 
  push:            # run on push events
    paths-ignore:  # but ignore everything in the docs subfolder 
      - 'docs/**'
  pull_request:    # run on pull requests
    paths-ignore:  # but ignore everything in the docs subfolder 
      - 'docs/**'
  release:         # run on tags of new releases
    types:
      - created

jobs:
  
  ###########################
  # BUILDING ON WINDOWS
  ###########################
  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        optional-libs: [false]
        python-version: [3.5, 3.6, 3.7, 3.8]
        include:
          - optional-libs: true
            build-type: full
            python-version: 3.8

    steps:
    - name: Cloning SUMO
      uses: actions/checkout@v2
      with:
        path: sumo

    - name: Fetching SUMO tags
      run: |
        cd sumo
        git fetch --prune --unshallow

    - name: Cloning SUMO Libraries
      uses: actions/checkout@v2
      with:
        repository: DLR-TS/SUMOLibraries 
        path: sumolibraries

    - name: Cloning SUMO Libraries Submodules
      run: |
        cd sumolibraries
        git submodule sync --recursive
        git submodule update --init --force --recursive --depth=1

    - name: Configuring Python 
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }} 
        architecture: x64

    - name: Building SUMO
      env:
        # Allow CMake build to use multiple processors (4)
        CMAKE_BUILD_PARALLEL_LEVEL: 4
      shell: cmd  # instead of PwSh (default) to be case-insensitive
      run: |
        cd sumo
        mkdir build_msvc
        cd build_msvc
        cmake .. -G"Visual Studio 16 2019" -A x64 -DCHECK_OPTIONAL_LIBS=${{ matrix.optional-libs }}
        cmake --build . --config Release
        cmake --build . --config Release --target examples

    - name: Building Python Wheel
      if: matrix.optional-libs == false
      run: |
        python -m pip install wheel
        cd sumo
        python tools\build\setup-sumolib.py bdist_wheel sdist
        python tools\build\setup-traci.py bdist_wheel sdist
        python -c "import sys; print('[bdist_wheel]\npython_tag=cp%s%s' % sys.version_info[0:2], file=open('setup.cfg', 'w'))"
        python tools\build\setup-libsumo.py bdist_wheel --plat-name win_amd64

    - name: Building Traas
      run: |
        cd sumo/build_msvc
        cmake --build . --config Release --target traas

#    - name: Basic Test
#      run: |
#        cd sumo/build_msvc
#        ctest --config Release --verbose

    - name: Uploading artifacts (SUMO binaries)
      if: matrix.python-version == 3.8
      uses: actions/upload-artifact@v1
      with:
        name: Windows${{ matrix.build-type }}
        path: sumo/bin

    - name: Uploading artifacts (Python wheels)
      if: matrix.optional-libs == false
      uses: actions/upload-artifact@v1
      with:
        name: Py${{ matrix.python-version }}-wheels
        path: sumo/dist

  ###########################
  # BUILDING ON LINUX
  ###########################
  build-linux:
    runs-on: ubuntu-latest 
    strategy:
      # Allow all other matrix-jobs to continue running, even if one of the jobs fails
      fail-fast: false   
      matrix:
        build_type: [full, minimal]
        compiler: [gcc, clang]

    steps:
    - name: Cloning SUMO
      uses: actions/checkout@v2
      with:
        path: sumo

    - name: Fetching SUMO tags
      run: |
        cd sumo
        git fetch --prune --unshallow

    - name: Preparing Build System
      run: |
        sudo apt-get update 
        sudo apt-get install cmake libeigen3-dev libxerces-c-dev libfox-1.6-dev libgdal-dev libproj-dev libgtest-dev libgl2ps-dev python3-dev swig openjdk-8-jdk maven

    - name: Preparing Gtest
      run: |
        pushd /usr/src/gtest
        sudo mkdir build
        cd build
        if [[ "${{ matrix.compiler }}" == "gcc" ]]; then sudo CC=gcc CXX=g++ cmake ..; fi
        if [[ "${{ matrix.compiler }}" == "clang" ]]; then sudo CC=clang CXX=clang++ cmake ..; fi
        sudo make
        sudo cp libgtest* /usr/lib/

    - name: Building SUMO
      run: |
        mkdir -p sumo/cmake-build 
        cd sumo/cmake-build 
        if [[ "${{ matrix.compiler }}" == "gcc" ]]; then export CC=gcc; export CXX=g++; fi
        if [[ "${{ matrix.compiler }}" == "clang" ]]; then export CC=clang; export CXX=clang++; fi
        if [[ "${{ matrix.build_type }}" == "full" ]]; then cmake ..; fi
        if [[ "${{ matrix.build_type }}" == "minimal" ]]; then cmake -DFOX_CONFIG= -DPROJ_LIBRARY= -DCHECK_OPTIONAL_LIBS=OFF ..; fi 
        make -j4

    - name: Building Traas
      run: |
        cd sumo/cmake-build 
        make traas

    - name: Installing SUMO
      run: |
        cd sumo/cmake-build 
        sudo make install

    - name: Building Examples and Tests
      run: |
        cd sumo/cmake-build
        if [[ "${{ matrix.build_type }}" == "full" ]]; then make CTEST_OUTPUT_ON_FAILURE=1 examples test; fi

    - name: Uploading artifacts (SUMO binaries)
      uses: actions/upload-artifact@v1
      with:
        name: Linux-${{ matrix.compiler }}-${{ matrix.build_type }}
        path: sumo/bin
        
  ###################
  # BUILDING ON OSX
  ###################
  build-osx:
    runs-on: macos-latest
    steps:
    - name: Cloning SUMO
      uses: actions/checkout@v2
      with:
        path: sumo

    - name: Fetching SUMO tags
      run: |
        cd sumo
        git fetch --prune --unshallow

    - name: Preparing Build System
      run: |
        brew update
        brew cask install xquartz
        brew install xerces-c fox proj gdal gl2ps  

    - name: Installing Google Test
      run: |
        git clone https://github.com/google/googletest
        cd googletest
        git checkout release-1.10.0
        mkdir build
        cd build
        cmake ..
        make
        make install

    - name: Building SUMO
      run: |
        mkdir -p sumo/cmake-build 
        cd sumo/cmake-build 
        cmake .. 
        make -j4

    - name: Building Traas
      run: |
        cd sumo/cmake-build 
        make traas

    - name: Installing SUMO
      run: |
        cd sumo/cmake-build 
        sudo make install

    - name: Building Examples and Tests
      run: |
        cd sumo/cmake-build
        make CTEST_OUTPUT_ON_FAILURE=1 examples test

    - name: Uploading artifacts (SUMO binaries)
      uses: actions/upload-artifact@v1
      with:
        name: MacOS
        path: sumo/bin
